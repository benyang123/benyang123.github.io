<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[android入门]]></title>
    <url>%2F2018%2F10%2F16%2Fandroid_note1%20%2F</url>
    <content type="text"><![CDATA[Android组件（一）Activity一个activity就是一个页面。 （二）Service完成耗时较长的操作，如网络连接，在后台运行。 （三）Content Provider对外提供数据。 （四）BroadcastReceiver监听手机出项的各种情况，起接收功能。 设置View属性方法一：layout中的xml中设置 方法二：MainActivity中用java来实现属性修改 为控件绑定监听器（一）获取代表控件的对象（二）定义一个类，实现监听器的接口（三）生成监听器对象（四）为控件绑定监听器对象控件布局方法一：使用布局文件完成控件布局 方法二：在Java代码中完成控件布局 布局方法分类Linear Layout/Relative Layout ListView/Grid View 线性布局初步：layout新建一个xml； Linear Layout里加控件； MainActivity.java—&gt;onCreate（）函数—&gt;setContentView（R.layout.调用的xml）; 距离单位距离单位px：像素 距离单位dp：较稳定（控件高度和宽度） 距离单位sp：随着用户设置字体的变化而变化（控件字体）]]></content>
      <categories>
        <category>android</category>
      </categories>
      <tags>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[login_ui]]></title>
    <url>%2F2018%2F10%2F16%2FQQui%2F</url>
    <content type="text"><![CDATA[Login_ui来自一个钢铁直男的ui。感觉android的layout和前端的html&amp;css一模一样，或许是因为移动端屏幕小的缘故吧，感觉比前端简单一些。 过程也很顺利。]]></content>
      <categories>
        <category>android</category>
      </categories>
      <tags>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[徐州网络赛 2018 G]]></title>
    <url>%2F2018%2F09%2F20%2F%E5%BE%90%E5%B7%9E%E7%BD%91%E7%BB%9C%E8%B5%9BG%2F</url>
    <content type="text"><![CDATA[Trace传送门：https://nanti.jisuanke.com/t/31459 problemThere’s a beach in the first quadrant. And from time to time, there are sea waves. A wave ( xx , yy ) means the wave is a rectangle whose vertexes are ( 00 , 00 ), ( xx , 00 ), ( 00 , yy ), ( xx , yy ). Every time the wave will wash out the trace of former wave in its range and remain its own trace of ( xx , 00 ) -&gt; ( xx , yy ) and ( 00 , yy ) -&gt; ( xx , yy ). Now the toad on the coast wants to know the total length of trace on the coast after n waves. It’s guaranteed that a wave will not cover the other completely. inputThe first line is the number of waves n(n \le 50000)n(n≤50000). The next nn lines，each contains two numbers xx yy ,( 0 &lt; x0&lt;x , y \le 10000000y≤10000000 )，the ii-th line means the ii-th second there comes a wave of ( xx , yy ), it’s guaranteed that when 1 \le i1≤i , j \le nj≤n ，x_i \le x_jxi≤xj and y_i \le y_jyi≤yj don’t set up at the same time. outputAn Integer stands for the answer. hintAs for the sample input, the answer is 3+3+1+1+1+1=103+3+1+1+1+1=10 sample input123431 44 13 3 sample output110 大意：依次输入n个矩形，后输入的会遮挡之前输入的矩形，并且没有一个矩形可以完全覆盖另一个矩形，求最后所有矩形轮廓长度和。 思路：脑补一下过程，大概就是分x方向与y方向分别讨论，注意没有一个矩形可以完全覆盖另一个矩形，所以每次只要加上与被覆盖的最大的矩形的差值就好，注意从后往前扫。 12345678910111213141516171819202122232425262728293031323334353637#include &lt;cstdio&gt;#include &lt;set&gt;#include &lt;algorithm&gt;using namespace std;typedef long long ll;#define maxn 50001set&lt;int&gt; st;set&lt;int&gt; st2;int a[maxn];int b[maxn];ll ans1;ll ans2;int main()&#123; int n; scanf("%d",&amp;n); for(int i=1;i&lt;=n;i++)&#123; scanf("%d",&amp;a[i]); scanf("%d",&amp;b[i]); &#125; ans1=0; ans2=0; st.insert(0); st2.insert(0); for(int i=n;i&gt;=1;i--)&#123; ans1+=a[i]-*(--lower_bound(st.begin(),st.end(),a[i])); st.insert(a[i]); ans2+=b[i]-*(--lower_bound(st2.begin(),st2.end(),b[i])); st2.insert(b[i]); &#125; printf("%lld\n",ans1+ans2); return 0;&#125; 比赛中好多队都A了，不知道为何比赛中后期队里思维都比较迟钝，可能还是打的少吧。]]></content>
      <categories>
        <category>ACM</category>
      </categories>
      <tags>
        <tag>map</tag>
        <tag>二分</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World!]]></title>
    <url>%2F2018%2F09%2F03%2FHello-World!%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Hello world</category>
      </categories>
      <tags>
        <tag>Hello world</tag>
      </tags>
  </entry>
</search>
